package main

import "fmt"

func swap(num1, num2 *int) {
	// 交换指针指向的值
	*num1, *num2 = *num2, *num1
}

// 定义一个函数，用于交换两个变量的值
func swap2(num1, num2 int) {
	// 将num2的值赋给num1，将num1的值赋给num2
	num1, num2 = num2, num1
}
func main() {
	// 指针
	a := 10
	// 定义一个指向int类型的指针p
	var p *int
	// 将指针p指向变量a的地址
	p = &a
	// 打印指针p指向的值
	fmt.Println(*p) // *p 取指针p指向的值
	// 打印指针p的类型
	fmt.Printf("%T\n", p) // *int
	/* fmt.Printf 是Go语言标准库 fmt 包中的一个函数，用于格式化输出。它的第一个参数是一个格式化字符串，后面的参数是要输出的值。
	"%T" 是格式化字符串中的一个占位符，表示将被替换为后面变量的类型。 */
	fmt.Println(p) // *int
	/* ----------------------------------------------------------------------- */
	fmt.Println("-------------------------")
	// 定义一个指向int类型的指针b，并将b指向变量a的地址
	b := &a
	// 打印指针b的值
	fmt.Println(b) // b 是 a 的地址

	// 打印指针b指向的值
	fmt.Println(*b) // *b 取指针b指向的值

	/* ----------------------------------------------------------------------- */
	fmt.Println("-------------------------")
	// 修改指针指向的值
	*b = 100
	fmt.Println(a)  // a 的值被修改为 100
	fmt.Println(*b) // *b 取指针b指向的值
	fmt.Println(b)  // b 是 a 的地址
	/* ----------------------------------------------------------------------- */
	fmt.Println("-------------------------")
	// 交换两个变量的值
	var c, d int = 10, 20
	fmt.Println("交换前：", c, d)
	swap(&c, &d)
	fmt.Println("交换后：", c, d)
	fmt.Println("-------------------------")
	// 交换两个变量的值
	var e, f int = 10, 20
	fmt.Println("交换前：", e, f)
	swap2(e, f)
	fmt.Println("交换后：", e, f)
	/* ----------------------------------------------------------------------- */
}
